- hosts: vagrant
  sudo: yes
  pre_tasks: 
    - include_vars: vars.yml

  tasks:
  - name: Build rabbitmq docker image 
    docker_image: 
      path: "/vagrant/rabbitmq" 
      name: "rabbit" 
      state: build

  - name: Remove data directory
    file: 
      name: "/docker/rabbit/data"
      state: absent
      owner: root
      group: docker
    when: purge_data is defined

  - name: Create data directory
    file: 
      name: "/docker/rabbit/data"
      state: directory
      owner: root
      group: docker

  - name: Create log directory
    file: 
      name: "/docker/rabbit/log"
      state: directory
      owner: root
      group: docker

  - name: Create config directory
    file: 
      name: "/docker/rabbit/config"
      state: directory
      owner: root
      group: docker

  - name: Copy rabbitmq.config 
    template: 
      src: "../rabbitmq/config/rabbitmq.config.j2"
      dest: "/docker/rabbit/config/rabbitmq.config"

  - name: Copy rabbitmq_defs.json
    template: 
      src: "../rabbitmq/config/rabbitmq_defs.json.j2"
      dest: "/docker/rabbit/config/rabbitmq_defs.json"
  - name: Create Docker Network
    command: docker network create --driver bridge mqtt_network
    ignore_errors: true

  - name: Create first rabbit docker instance per region 
    docker:
      name: "rabbit-node1-{{ item.value.name }}"
      image: rabbit
      state: started
      hostname: "rabbitx-node1-{{ item.value.name }}"
      domainname: "mqtt.fabrik.nytimes.com"
      volumes:
      - "/docker/rabbit/config:/rabbit/config:ro"
      - "/docker/rabbit/data:/rabbit/data:rw"
      - "/docker/rabbit/log:/rabbit/log:rw"
      ports: 
          - "{{ item.value.port_prefix }}672:5672"
          - "{{ item.value.port_prefix }}673:15672" 
          - "{{ item.value.port_prefix }}369:4369"
          - "{{ item.value.port_prefix }}883:1883"
      env:
        HOSTNAME: "rabbit-node1-{{ item.value.name }}"
        RABBITMQ_USE_LONGNAME: true
        FEDERATE_WITH: ' {"uri":[{% for region in regions%}{% if region != item.key%}{% for node in nodes %}"amqp://admin:admin@rabbit-{{ node }}-{{ regions[region].name }}"{% if not loop.last %},{%endif%}{%endfor%}{%endif%}{%endfor%}]}'
    with_dict: regions


  - name: Connect containers to network   
    command: "docker network connect mqtt_network rabbit-{{ item[1] }}-{{ regions[item[0]].name }}"
    with_nested:
      - regions
      - ['node1']

  - name: Create second docker instance per region 
    docker:
      name: "rabbit-node2-{{ item.value.name }}"
      image: rabbit
      state: started
      hostname: "rabbit-node2-{{ item.value.name }}"
      domainname: "mqtt.fabrik.nytimes.com"
      volumes:
      - "/docker/rabbit/config:/rabbit/config:ro"
      - "/docker/rabbit/data:/rabbit/data:rw"
      - "/docker/rabbit/log:/rabbit/log:rw"
      ports:
        - "{{ item.value.port_prefix }}884:1883"
      env:
        HOSTNAME: "rabbit-node2-{{ item.value.name }}"
        CLUSTERED: true
        CLUSTER_WITH: "rabbit-node1-{{ item.value.name }}"
        RABBITMQ_USE_LONGNAME: true
    with_dict: regions

  - name: Create third docker instance per region 
    docker:
      name: "rabbit-node3-{{ item.value.name }}"
      image: rabbit
      state: started
      hostname: "rabbit-node3-{{ item.value.name }}"
      domainname: "mqtt.fabrik.nytimes.com"
      volumes:
      - "/docker/rabbit/config:/rabbit/config:ro"
      - "/docker/rabbit/data:/rabbit/data:rw"
      - "/docker/rabbit/log:/rabbit/log:rw"
      ports:
        - "{{ item.value.port_prefix }}884:1884"
      env:
        HOSTNAME: "rabbit-node3-{{ item.value.name }}"
        CLUSTERED: true
        CLUSTER_WITH: "rabbit-node1-{{ item.value.name }}"
        RABBITMQ_USE_LONGNAME: true
    with_dict: regions


  - name: Connect containers to network   
    command: "docker network connect mqtt_network rabbit-{{ item[1] }}-{{ regions[item[0]].name }} "
    with_nested:
      - regions
      - nodes
